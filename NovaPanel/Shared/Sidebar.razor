@using NovaPanel.Model;
@using System.Net.Http
@using System.Net.Http.Json

<div id="sidebar" class="group peer hidden md:block text-sidebar-foreground" data-state="expanded" data-collapsible="" data-variant="sidebar" data-side="left">
    <div class="duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear group-data-[collapsible=offcanvas]:w-0 group-data-[side=right]:rotate-180 group-data-[collapsible=icon]:w-[--sidebar-width-icon]"></div>
    <div class="duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)] group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l">
        <div data-sidebar="sidebar" class="flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow">
            <div data-sidebar="header" class="flex flex-col gap-2 p-2">
                <ul data-sidebar="menu" class="flex w-full min-w-0 flex-col gap-1">
                    <li data-sidebar="menu-item" class="group/menu-item relative">
                        <button class="peer/menu-button flex w-full items-center gap-2 overflow-hidden text-left outline-none disabled:opacity-50 group-data-[collapsible=icon]:!size-8 [&amp;>span:last-child]:truncate [&amp;>svg]:size-4 [&amp;>svg]:shrink-0 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground ">
                            <div class="flex aspect-square items-center justify-center rounded-lg text-sidebar-primary-foreground">
                                <img width="60" height="60" src="novapanel.svg" />
                            </div>
                            <div class="grid flex-1 text-left text-sm leading-tight">
                                <span class="truncate font-semibold">Nova Panel</span>
                                <span class="truncate text-xs">
                                    @ApplicationRuntimes.VersionInfo.Name 
                                    @ApplicationRuntimes.VersionInfo.Version
                                </span>
                            </div>

                        </button>
                    </li>
                </ul>
            </div>
            <div data-sidebar="content" class="flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden">
                <div data-sidebar="group" class="relative flex w-full min-w-0 flex-col p-2">
                    <ul data-sidebar="menu" class="flex w-full min-w-0 flex-col gap-1">

                        @foreach (var nav in ApplicationRuntimes.NavItems)
                        {
                            @if (nav?.Items?.Length > 0)
                            {
                                <li data-sidebar="menu-item" class=" group/menu-item relative group/collapsible" data-state="open">
                                    <button data-sidebar="menu-button" data-size="default" data-active="false"
                                    class="navitem peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left outline-none ring-sidebar-ring transition-[width,height,padding] focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&amp;>span:last-child]:truncate [&amp;>svg]:size-4 [&amp;>svg]:shrink-0 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground h-8 text-sm"
                                    type="button" aria-controls="radix-:R1ikpuuuuu6ja:" aria-expanded="true" data-state="open">
                                        <span class="@((MarkupString)nav.Icon)"/>
                                        <span>@nav.Name</span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right ml-auto transition-transform duration-200 group-data-[state=open]/collapsible:rotate-90"><path d="m9 18 6-6-6-6"></path></svg>
                                    </button>
                                    <div data-state="closed" id="radix-:R1ikpuuuuu6ja:" style="--radix-collapsible-content-height: 96px; --radix-collapsible-content-width: 229px;">
                                        <ul data-sidebar="menu-sub" class="mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5 group-data-[collapsible=icon]:hidden">
                                            @foreach (var item in nav.Items)
                                            {
                                                <li>
                                                    <NavLink href="@item.Jump" data-sidebar="menu-sub-button" data-size="md"
                                                    class="flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&amp;>span:last-child]:truncate [&amp;>svg]:size-4 [&amp;>svg]:shrink-0 [&amp;>svg]:text-sidebar-accent-foreground data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground text-sm group-data-[collapsible=icon]:hidden">
                                                        <span class="@((MarkupString)item.Icon)" />
                                                        <span>@item.Name</span>
                                                    </NavLink>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </li>
                            }
                            else
                            {
                                <li data-sidebar="menu-item" class="group/menu-item relative group/collapsible">
                                    <NavLink href="@nav.Jump" data-sidebar="menu-button" data-size="default" data-active="false"
                                    class="navitem peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left outline-none ring-sidebar-ring transition-[width,height,padding] focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&amp;>span:last-child]:truncate [&amp;>svg]:size-4 [&amp;>svg]:shrink-0 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground h-8 text-sm"
                                    type="button" aria-controls="radix-:R2ikpuuuuu6ja:" aria-expanded="false" data-state="closed">
                                        <span class="@((MarkupString)nav.Icon)" />
                                        <span>@nav.Name</span>
                                    </NavLink>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
